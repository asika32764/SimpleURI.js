/*!
 * The simple JS URI object.
 *
 * @license  GNU General Public License version 2 or later; see LICENSE
 */
;(function(){var b="SimpleURI",a=window.URI;b=window.URI=window[b]=function(e){this.parse(e)};b.prototype.parse=function(e){var f=document.createElement("a");f.href=e;this.scheme=f.protocol||"";this.username=f.username||"";this.password=f.password||"";this.host=f.hostname||"";this.port=f.port||"";this.path=f.pathname||"";this.query=d(f.search)||"";this.hash=f.hash||""};b.prototype.setQuery=function(e){this.query=e};b.prototype.setVar=function(e,f){this.query[e]=f};b.prototype.getVar=function(e,f){return this.query[e]||f};b.prototype.httpBuildQuery=function(i,j){var h,f,e=[],g;j=j||"&";for(f in i){h=i[f];g=c(f,h,j);if(g!==""){e.push(g)}}return e.join(j)};b.prototype.toString=function(g){var e="";var f=this.httpBuildQuery(this.query);g=g||["scheme","user","pass","host","port","path","query","fragment"];e+=g.indexOf("scheme")!=-1?(this.scheme?this.scheme+"//":""):"";e+=g.indexOf("user")!=-1?this.username:"";e+=g.indexOf("pass")!=-1?(this.password?":":"")+this.password+(this.username?"@":""):"";e+=g.indexOf("host")!=-1?this.host:"";e+=g.indexOf("port")!=-1?(this.port?":":"")+this.port:"";e+=g.indexOf("path")!=-1?"/"+this.path.replace(/^\/|\/$/g,""):"";e+=g.indexOf("query")!=-1?(f?"?"+f:""):"";e+=g.indexOf("fragment")!=-1?(this.hash?"#"+this.hash:""):"";return e};b.noConflict=function(){if(window.URI===this){window.URI=a}return b};var d=function(e){var o,g={},q,f;if(!e){return{}}if(e.charAt(0)=="?"){e=e.substring(1)}o=e.split(/[&;]/);if(!o.length){return g}for(var h in o){f=o[h];var m=f.indexOf("=")+1;var p=m?f.substr(m):"";var r=m?f.substr(0,m-1).match(/([^\]\[]+|(\B)(?=\]))/g):[f];var l=g;if(!r){return}p=decodeURIComponent(p);for(var j in r){q=decodeURIComponent(r[j]);var n=l[q];if(j<r.length-1){l=l[q]=n||{}}else{if(typeof n=="object"){n.push(p)}else{l[q]=n!=null?[n,p]:p}}}}return g};var c=function(g,i,h){var e,f=[];if(i===true){i="1"}else{if(i===false){i="0"}}if(i!=null){if(typeof i==="string"||typeof i==="number"){return g+"="+i}else{if(typeof i==="object"){for(e in i){if(i[e]!=null){f.push(c(g+"["+e+"]",i[e],h))}}return f.join(h)}else{throw new Error("There was an error processing for buildQuery().")}}}else{return""}}})();
